/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ipn.mx.vistas;


import com.ipn.mx.conexion.ClienteDao;
import com.ipn.mx.conexion.Conexion;
import com.ipn.mx.conexion.ConexionListas;
import com.ipn.mx.conexion.ConocerDao;
import com.ipn.mx.conexion.MontoFrecuenciaDAO;
import com.ipn.mx.conexion.OperacionDAO;
import com.mx.ipn.clases.AESDemo;
import com.mx.ipn.clases.Cliente;
import com.mx.ipn.clases.Empleado;
import com.mx.ipn.clases.MiPanel;
import com.mx.ipn.clases.Moneda;
import com.mx.ipn.clases.Monetario;
import com.mx.ipn.clases.TipoOperacion;
import com.mx.ipn.clases.Validaciones;
import java.awt.BorderLayout;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;

/**
 *
 * @author Clemente
 */
public class VistaOperaciones extends javax.swing.JFrame {
   AESDemo d = new AESDemo ();
   int respuesta;
    int c1=0;
    String MontoOperacion,MontoAnticipo;
    //calcular montos inusuales
    double promedio=0.0;
    double suma=0.0;        
    double varianza=0.0;
    double desviacion=0.0;
    double ingresocomparar=0.0;
    int poblacion=0;
    int i=0;
    int l=0;
    int mouse=0, mouse1=0;
    
    String maximo="";
    String minimo="";
    String descripcionAlarma="";
    ResultSet t;
    MontoFrecuenciaDAO MFD=new MontoFrecuenciaDAO();
    int idCliente;
    int idVendedor;
    int id[]=new int[50];
    int valid =0;

    
    //frecuencias
    int ventas=0;
    int compras=0;
    int Clientevendedor=0;
    int Clientecomprador=0;
    String descripcionFrecuencia="";
    
    //resto variables
    
   String parametroBusqueda=""; 
   double APais=0;
   double AA=0;
   double AR=0;
   double ATP=0;
   double PEP=0;
   double anticipo=0;
   int riesgoPais=0;
   int riesgoActividad=0;
   int riesgoresidencia=0;
   String tipoPersona="";
   String formato="";
   ClienteDao cd=new ClienteDao();
   Validaciones val=new Validaciones();
   
    Date f=new Date();
    String aux=f.toString();
    String dia;
    String año;
    String mes;
    String fecha;
    int auxmes;
    Cliente c=new Cliente();
    Cliente cl=new Cliente();
    Monetario mone=new Monetario();
    TipoOperacion tp=new TipoOperacion();
    Moneda moneda=new Moneda();
    
    public Empleado vendedorid= new Empleado(Login.vendedor);

    Conexion con=new Conexion();
    Connection reg=con.conectar();
    ConexionListas con2 = new ConexionListas();
    Connection reg2=con2.conectar();
    private String numcontrato;
    private double monto,monto1;
    private String descripcion;
    private String descripcionB;
    private String numeroB;
    private String cpB;
    private String metrosB;
    
    /**
     * Creates new form VistaOperaciones
     */
    public VistaOperaciones() throws SQLException {
        d.addKey(Login.contraseña);
        initComponents();
                   MiPanel p = new MiPanel();
        this.add( p , BorderLayout.CENTER);
        p.repaint();
        setLayout(null);
        setLocationRelativeTo(null);        // Centering on screen...
        setSize(900, 700);               // Setting dimensions...
        setTitle("SisPLD");
        setResizable(false);
        

        cargarClientes();
        cargarmoneda();
        cargarmonetario();
        cargartipoOperacion();
        
        nombre.setEditable(false);
        ap.setEditable(false);
        am.setEditable(false);
        act.setEditable(false);
        ing.setEditable(false);
        
         ///
            
         
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        contrato = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        operacion = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        direccionBien = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        numeroBien = new javax.swing.JTextField();
        CPBien = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        metrosbien = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        tipobien = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        combooperacion = new javax.swing.JComboBox();
        combomoneda = new javax.swing.JComboBox();
        combomonetario = new javax.swing.JComboBox();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        recibeAnticipo = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        combocliente = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        nombre = new javax.swing.JTextField();
        ap = new javax.swing.JTextField();
        am = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        act = new javax.swing.JTextField();
        ing = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        parametros = new javax.swing.JComboBox();
        busqueda = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        ClienteVendedor = new javax.swing.JComboBox();
        jLabel22 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        nombreVendedor = new javax.swing.JTextField();
        apellidoPaternoVendedor = new javax.swing.JTextField();
        apellidoMaternoVendedor = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        actividadVendedor = new javax.swing.JTextField();
        ingresoVendedor = new javax.swing.JTextField();
        SeleccionaClienteV = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        parametros2 = new javax.swing.JComboBox();
        busquedas2 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jLabel3.setText("jLabel3");

        jButton4.setText("jButton4");

        jButton6.setText("jButton6");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel2.setOpaque(false);

        jLabel11.setText("Número de Identificación:");

        contrato.setToolTipText("Referencia de Operacion ");
        contrato.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                contratoMouseClicked(evt);
            }
        });
        contrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contratoActionPerformed(evt);
            }
        });

        jLabel12.setText("Monto de la operación:");

        operacion.setToolTipText("Monto total de la Venta del Inmueble");
        operacion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                operacionMouseExited(evt);
            }
        });
        operacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                operacionActionPerformed(evt);
            }
        });
        operacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                operacionKeyPressed(evt);
            }
        });

        jLabel13.setText("Calle y Colonia:");

        jLabel19.setText("Escriba los datos necesarios para registrar una operación");

        direccionBien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                direccionBienMouseClicked(evt);
            }
        });

        jLabel30.setText("Numero:");

        jLabel31.setText("Codigo postal:");

        numeroBien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numeroBienActionPerformed(evt);
            }
        });

        jLabel32.setText("Metros cuadrados:");

        jLabel33.setText("Tipo bien:");

        tipobien.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione...", "Casa", "Departamento", "Terreno" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel19))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12)
                            .addComponent(jLabel11)
                            .addComponent(jLabel30)
                            .addComponent(jLabel31)
                            .addComponent(jLabel32)
                            .addComponent(jLabel33))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(contrato)
                            .addComponent(operacion, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                            .addComponent(direccionBien)
                            .addComponent(numeroBien)
                            .addComponent(CPBien)
                            .addComponent(metrosbien)
                            .addComponent(tipobien, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(532, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel19)
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(contrato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(operacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(direccionBien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numeroBien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(CPBien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(metrosbien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(tipobien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(97, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Detalles de la operación", jPanel2);

        jPanel3.setOpaque(false);

        jLabel14.setText("Tipo de Operación:");

        jLabel15.setText("Moneda Empleada:");

        jLabel16.setText("Tipo de Pago (Monetario):");

        combooperacion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione.." }));
        combooperacion.setToolTipText("Modo de transacción");

        combomoneda.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione..." }));
        combomoneda.setToolTipText("MXN (pesos Mexicanos), USD (dolares americanos)");
        combomoneda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combomonedaActionPerformed(evt);
            }
        });

        combomonetario.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione..." }));
        combomonetario.setToolTipText("Modo de Transacción ");

        jLabel18.setText("Seleccione los datos  para asociarlos a la operación:");

        jLabel20.setText("Monto de Anticipo:");

        recibeAnticipo.setToolTipText("Este campo debe ser llenado solo si existe un anticipo ");
        recibeAnticipo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                recibeAnticipoMouseExited(evt);
            }
        });
        recibeAnticipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recibeAnticipoActionPerformed(evt);
            }
        });
        recibeAnticipo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                recibeAnticipoKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel16))
                                .addGap(38, 38, 38)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(combooperacion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(combomoneda, 0, 193, Short.MAX_VALUE)
                            .addComponent(combomonetario, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(recibeAnticipo)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel18)))
                .addContainerGap(477, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(combooperacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(combomoneda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(combomonetario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(recibeAnticipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(188, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Detalles Monetarios", jPanel3);

        jPanel1.setOpaque(false);

        jLabel1.setText("Cliente:");

        combocliente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione..." }));
        combocliente.setToolTipText("Seleccion el cliente para asociarlo a la operación");
        combocliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboclienteActionPerformed(evt);
            }
        });

        jLabel2.setText("Cliente asociado a la operación");

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Nombre"));
        jPanel4.setOpaque(false);

        jLabel4.setText("Nombre:");

        jLabel5.setText("Apellido Paterno:");

        jLabel6.setText("Apellido Materno:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(nombre))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(ap))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(am, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(ap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(am, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Dirección"));
        jPanel6.setOpaque(false);

        jLabel9.setText("Actividad:");

        jLabel10.setText("Ingreso:");

        ing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(91, 91, 91))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(act)
                    .addComponent(ing, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(act, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel8))
                .addGap(21, 21, 21)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(ing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(57, Short.MAX_VALUE))
        );

        jButton1.setText("Seleccionar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel17.setText("Seleccione el cliente para asociarlo a la operacion con los datos registrados previamente:");

        parametros.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione...", "Nombre", "Apellido Paterno", "RFC" }));

        jButton5.setText("Buscar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(parametros, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(busqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton5))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(combocliente, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(26, 26, 26)
                        .addComponent(jButton1)))
                .addContainerGap(110, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(211, 211, 211)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(183, 183, 183))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(combocliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(parametros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(busqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(78, 78, 78))))
        );

        jTabbedPane1.addTab("Selección Cliente Comprador", jPanel1);

        jPanel7.setOpaque(false);

        jLabel21.setText("Cliente:");

        ClienteVendedor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione..." }));
        ClienteVendedor.setToolTipText("Seleccion el cliente para asociarlo a la operación");
        ClienteVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClienteVendedorActionPerformed(evt);
            }
        });

        jLabel22.setText("Cliente asociado a la operación");

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Nombre"));
        jPanel8.setOpaque(false);

        jLabel23.setText("Nombre:");

        jLabel24.setText("Apellido Paterno:");

        jLabel25.setText("Apellido Materno:");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel23)
                        .addGap(18, 18, 18)
                        .addComponent(nombreVendedor))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addGap(18, 18, 18)
                        .addComponent(apellidoPaternoVendedor))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addGap(18, 18, 18)
                        .addComponent(apellidoMaternoVendedor, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(nombreVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(apellidoPaternoVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(apellidoMaternoVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Dirección"));
        jPanel10.setOpaque(false);

        jLabel27.setText("Actividad:");

        jLabel28.setText("Ingreso:");

        ingresoVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresoVendedorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addGap(91, 91, 91))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel27)
                            .addComponent(jLabel28))
                        .addGap(18, 18, 18)))
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(actividadVendedor)
                    .addComponent(ingresoVendedor, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel27)
                        .addComponent(actividadVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel26))
                .addGap(21, 21, 21)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(ingresoVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(57, Short.MAX_VALUE))
        );

        SeleccionaClienteV.setText("Seleccionar");
        SeleccionaClienteV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SeleccionaClienteVActionPerformed(evt);
            }
        });

        jLabel29.setText("Seleccione el cliente para asociarlo a la operacion con los datos registrados previamente:");

        parametros2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione...", "Nombre" }));

        jButton7.setText("Buscar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel29)
                            .addComponent(jLabel22)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(parametros2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(busquedas2, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addGap(34, 34, 34)
                                .addComponent(ClienteVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(SeleccionaClienteV)))
                .addContainerGap(110, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel22)
                .addGap(18, 18, 18)
                .addComponent(jLabel29)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGap(211, 211, 211)
                        .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(183, 183, 183))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(ClienteVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SeleccionaClienteV))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(parametros2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(busquedas2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(162, 162, 162))))
        );

        jTabbedPane1.addTab("Selección Cliente Vendedor", jPanel7);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Registro de Operación");

        jButton2.setBackground(new java.awt.Color(0, 153, 51));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Registrar");
        jButton2.setActionCommand("Guardar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setForeground(new java.awt.Color(0, 153, 51));
        jButton3.setText("Regresar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addGap(50, 50, 50))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jLabel7)
                .addGap(30, 30, 30)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Detalles de la operación");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            // TODO add your handling code here:
            String a="";
            if(tipobien.getSelectedIndex()==1){a="Una casa ubicada en: ";}
            if(tipobien.getSelectedIndex()==2){a="Un departamento ubicado en: ";}
            if(tipobien.getSelectedIndex()==3){a="Un terreno ubicado en: ";}
            numcontrato=contrato.getText();
            descripcionB=direccionBien.getText();
            numeroB=numeroBien.getText();
            cpB=numeroBien.getText();
            metrosB=metrosbien.getText();
            anticipo=Double.parseDouble(MontoAnticipo);
            
            descripcion=a+direccionBien.getText()+" numero: "+numeroBien.getText()+"\n CP:"+CPBien.getText()+" con:"+metrosbien.getText()+" metros cuadrados";
            boolean mo=val.Ingreso(MontoOperacion);
            boolean moa=val.Ingreso(MontoAnticipo);
            boolean con=val.alfanumericos(numcontrato);
            boolean db=val.sololetras(descripcionB);
            boolean cop=val.codigopostal(cpB);
            boolean num=val.numerocalle(numeroB);
            boolean num1=val.solonumeros(metrosB);
            
            moneda= (Moneda) combomoneda.getSelectedItem();
            tp= (TipoOperacion) combooperacion.getSelectedItem();
            mone= (Monetario) combomonetario.getSelectedItem();
            
            
            if(contrato.getText().equals("") || operacion.getText().equals("") || direccionBien.getText().equals("") || numeroBien.getText().equals("") || CPBien.getText().equals("")){
                JOptionPane.showMessageDialog(null, "Todos los campos en detalle de la operacion son requeridos");
            }
            else{
                if(combooperacion.getSelectedIndex()==0 || combomoneda.getSelectedIndex()==0 || combomonetario.getSelectedIndex()==0){
                    JOptionPane.showMessageDialog(null, "Los combobox deben tener una eleccion al igual que el cliente asociado.");
                }
                else{
                    if(mo && con && moa){
                        if(db){
                            
                                if(num){
                                    if(num1){
                                       try {
                                            OperacionDAO op = new OperacionDAO();
                                            MontoFrecuenciaDAO MFD= new MontoFrecuenciaDAO();

                                            op.RegistroOperacion(d.encrypt(numcontrato), monto, fecha, 1 , d.encrypt(descripcion), c.getIdCLiente(), vendedorid.getIdEmpleado(), 1, tp.getId_tipoOp(), moneda.getId_moneda(), mone.getId_clavemonetario(),anticipo,idVendedor);                
                                        } catch (Exception e) {
                                        }   
                                    }else{
                                        JOptionPane.showMessageDialog(null, "El campo Metros Cuadrados solo acepta numeros");
                                    }
                                    
                                }else{
                                    JOptionPane.showMessageDialog(null, "El campo Numero solo acepta numeros");
                                }
                                
                           
                          
                        }else{
                            JOptionPane.showMessageDialog(null, "El campo Calle y Colonia debe tener solo letras");
                        }
                        
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "El monto debe tener decimales");
                    }
                }
            }
            
            if(anticipo>500000){
            t=MFD.obtenidcontrato(d.encrypt(numcontrato));
             while(t.next()){
                l=t.getInt("id_Operacion");
                }
             MFD.insertaalarma(l, 1, fecha,"El anticipo supero el limite de $500,000 en efectivo ya que tuvo un anticipo de: "+anticipo,1);
             
            }
            
            String auxcontrato="";
            t=MFD.obtencontrato(d.encrypt(numcontrato));
            while(t.next())
            {
                auxcontrato=t.getString("numeroContrato");
            }
            if(auxcontrato.equals("")){}
            else{
                if((promedio+2*desviacion)< monto ){
                t=MFD.obtenidcontrato(d.encrypt(numcontrato));
                while(t.next()){
                l=t.getInt("id_Operacion");
                }
                double razon=monto-(promedio+2*desviacion);
                descripcionAlarma= " "+descripcionAlarma+razon+"";
                }
                
                 //Frecuencia
                t=MFD.ObtenIDSClientes(l);
                while(t.next()){
                Clientecomprador=t.getInt("Cliente_id");
                Clientevendedor=t.getInt("Cliente_CA_id");
                }
                
                
                
                t=MFD.NumeroCompras(Clientecomprador);
                while(t.next()){
                compras=t.getInt("compras");
                }
                t=MFD.NumeroVentas(Clientevendedor);
                 while(t.next()){
                ventas=t.getInt("ventas");
                }
                 
                if(2<=compras){descripcionFrecuencia="El Cliente Comprador tiene mas de una compra recientemente";
                MFD.insertaalarma(l,4,fecha,descripcionFrecuencia,1);
                }
                if(2<=ventas){descripcionFrecuencia="El Cliente Vendedor a realizado mas de una venta recientemente";
                MFD.insertaalarma(l,4,fecha,descripcionFrecuencia,1);
                }
                 
                 //introduce Alarma monto o frecuencia
                 if(descripcionAlarma.equals("")){
                 MFD.actualizarRiesgo(l);
                 }
                 else{
                 MFD.insertaalarma(l, 3, fecha, descripcionAlarma,1);}
                 
            }
        } catch (SQLException ex) {
            Logger.getLogger(VistaOperaciones.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VistaOperaciones.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void SeleccionaClienteVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeleccionaClienteVActionPerformed
        // TODO add your handling code here:

        if(ClienteVendedor.getSelectedIndex()!=0){
            try {

                cl=(Cliente) ClienteVendedor.getSelectedItem();
                String a=cl.getRfc();
                int r=(int) cl.getRiesgo();

                idVendedor =cl.getIdCLiente();
                operacion (idCliente);
                System.out.println(idCliente+"<==id_cLiente");
                int b=cl.getIdCLiente();

                try {
                    listasNegras(a,r);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(VistaOperaciones.class.getName()).log(Level.SEVERE, null, ex);
                }
                String aux="Select c.nombre,c.apellido_Pat,c.apellido_Mat,c.ingreso_Promedio,ac.actividad from cliente c inner join actividades ac on c.actividad_Principal=ac.id_actividad  where c.RFC='"+d.encrypt(a)+"' ";
                Statement st;
                st = reg.createStatement();
                ResultSet rs=st.executeQuery(aux);

                while(rs.next()){

                    nombreVendedor.setText(d.decrypt(rs.getString("nombre")));
                    apellidoPaternoVendedor.setText(d.decrypt(rs.getString("apellido_Pat")));
                    apellidoMaternoVendedor.setText(d.decrypt(rs.getString("apellido_Mat")));
                    actividadVendedor.setText(rs.getString("actividad"));
                    ingresocomparar=rs.getDouble("ingreso_Promedio");
                    ingresoVendedor.setText(NumberFormat.getInstance().format(ingresocomparar));
                }

            }
            catch (SQLException ex) {
                Logger.getLogger(VistaOperaciones.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_SeleccionaClienteVActionPerformed

    private void ingresoVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresoVendedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresoVendedorActionPerformed

    private void ClienteVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClienteVendedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ClienteVendedorActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        dia=aux.substring(8,10);
        auxmes=f.getMonth();
        auxmes=auxmes+1;
        mes= Integer.toString(auxmes);
        año=aux.substring(24, 28);
        fecha=año+"-"+mes+"-"+dia;

        if(combocliente.getSelectedIndex()!=0){
            try {
                try {

                    c=(Cliente) combocliente.getSelectedItem();
                    String a=c.getRfc();
                    int r=(int) c.getRiesgo();
                    
                    idCliente =c.getIdCLiente();
                    operacion (idCliente);
                    int b=c.getIdCLiente();

                    try {
                        listasNegras(a,r);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(VistaOperaciones.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    String aux="Select c.nombre,c.apellido_Pat,c.apellido_Mat,c.ingreso_Promedio,ac.actividad from cliente c inner join actividades ac on c.actividad_Principal=ac.id_actividad  where c.RFC='"+d.encrypt(a)+"' ";
                    Statement st;
                    st = reg.createStatement();
                    ResultSet rs=st.executeQuery(aux);

                    while(rs.next()){

                        nombre.setText(d.decrypt(rs.getString("nombre")));
                        ap.setText(d.decrypt(rs.getString("apellido_Pat")));
                        am.setText(d.decrypt(rs.getString("apellido_Mat")));
                        act.setText(rs.getString("actividad"));
                        ingresocomparar=rs.getDouble("ingreso_Promedio");
                        ing.setText(NumberFormat.getInstance().format(ingresocomparar));
                    }

                } catch (SQLException ex) {
                    Logger.getLogger(VistaOperaciones.class.getName()).log(Level.SEVERE, null, ex);
                }
                double auxmonto1=ingresocomparar-5000;
                double auxmonto2=ingresocomparar+5000;

                maximo= String.valueOf(auxmonto2);
                minimo=String.valueOf(auxmonto1);

                t=MFD.obtenpoblacion(minimo, maximo);

                while(t.next()){
                    poblacion=t.getInt("poblacion");
                    System.out.println("la poblacion:"+poblacion);
                }

                t=MFD.obtenmontos(minimo,maximo);
                double[] Montoxcomp=new double[poblacion];
                while(t.next()){
                    Montoxcomp[i]=t.getDouble("monto");
                    i++;
                }

                for (int j=0;j<Montoxcomp.length;j++){
                    suma=suma+Montoxcomp[j];
                }

                promedio=suma/poblacion;
                suma=0.0;

                for(int j=0;j<Montoxcomp.length;j++){
                    suma=suma+Math.pow(Montoxcomp[j]-promedio,2);
                }
                varianza=suma/poblacion;

                desviacion=Math.pow(varianza,0.5);
                System.out.println("num de operaciones obtenidos:"+ poblacion+" promedio de:"+ promedio+"\n"+" varianza de :" +varianza+"desviacion "+desviacion);
                
                //FRecuencia
                
            } catch (SQLException ex) {
                Logger.getLogger(VistaOperaciones.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ingActionPerformed

    private void comboclienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboclienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboclienteActionPerformed

    private void combomonedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combomonedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combomonedaActionPerformed

    private void operacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_operacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_operacionActionPerformed

    private void contratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contratoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contratoActionPerformed

    private void contratoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contratoMouseClicked
        // TODO add your handling code here:
        /*   if(operacion.getText().equals("")){}
        else{
            formato=NumberFormat.getInstance().format(Double.parseDouble(operacion.getText()));
            if(formato.equals("")){}
            else{operacion.setText(formato);}}*/
    }//GEN-LAST:event_contratoMouseClicked

    private void recibeAnticipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recibeAnticipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_recibeAnticipoActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:
         
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void numeroBienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numeroBienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numeroBienActionPerformed

    private void direccionBienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_direccionBienMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_direccionBienMouseClicked

    private void operacionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_operacionMouseExited
        // TODO add your handling code here:
        
        if(operacion.getText().equals("")){}
        else {
            if(mouse==0){
                MontoOperacion = operacion.getText()+".00";
            DecimalFormat formato = new DecimalFormat("$#,###.00");
    
            monto=Double.parseDouble(MontoOperacion);
            System.out.println(operacion+"<<<");
            //formato=NumberFormat.getInstance().format(monto);
            operacion.setText(formato.format(monto));
        mouse = 1;
            }
            
        }
    }//GEN-LAST:event_operacionMouseExited

    private void recibeAnticipoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_recibeAnticipoMouseExited
        // TODO add your handling code here:
         if(recibeAnticipo.getText().equals("")){}
             else{
             if(mouse1==0){
                 MontoAnticipo = recibeAnticipo.getText()+".00";
            DecimalFormat formato = new DecimalFormat("$#,###.00");
    
            monto1=Double.parseDouble(MontoAnticipo);
            System.out.println(MontoAnticipo+"<<<");
            //formato=NumberFormat.getInstance().format(monto);
            recibeAnticipo.setText(formato.format(monto1));
            mouse1=1;
             }
            
         }
    }//GEN-LAST:event_recibeAnticipoMouseExited

    private void operacionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_operacionKeyPressed
        // TODO add your handling code here:
        mouse=0;
    }//GEN-LAST:event_operacionKeyPressed

    private void recibeAnticipoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_recibeAnticipoKeyPressed
        // TODO add your handling code here:
        mouse1=0;
    }//GEN-LAST:event_recibeAnticipoKeyPressed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if(parametros.getSelectedIndex()==0 || busqueda.getText().equals("")){
        JOptionPane.showMessageDialog(null, "Selecciona una opcion de busqueda y proporciona \n un parametro para iniciar");
        }
        else{
        if(parametros.getSelectedIndex()==1){
            parametroBusqueda=d.encrypt(busqueda.getText());
         try {
            String consulta="Select * from cliente where nombre='"+parametroBusqueda+"' ";
            System.out.println(consulta);
            Statement st2=reg.createStatement();
            ResultSet rs2=st2.executeQuery(consulta);
            while(rs2.next()){
                Cliente act=new Cliente();
                act.setIdCLiente(rs2.getInt(1));
                act.setNombre(d.decrypt(rs2.getString(2)));
                act.setApellPat(d.decrypt(rs2.getString(3)));
                act.setApellMat(d.decrypt(rs2.getString(4)));
                act.setFecha_nac(rs2.getString(5));
                act.setTipo(rs2.getInt(6));
                act.setRfc(d.decrypt(rs2.getString(7)));
                act.setCalle(d.decrypt(rs2.getString(8)));
                act.setNumero(d.decrypt(rs2.getString(9)));
                act.setPaisOrigen(rs2.getInt(10));
                act.setPaisResidencia(rs2.getInt(11));
                act.setEntidad(rs2.getInt(12));
                act.setLocalidad(rs2.getInt(13));
                act.setCodigoPostal(d.decrypt(rs2.getString(14)));
                act.setNumTel(d.decrypt(rs2.getString(15)));
                act.setRiesgo(rs2.getInt(16));
                act.setActividad(rs2.getString(17));
                act.setIngreso(rs2.getDouble(18));
                System.out.println("Si entre al while");
              combocliente.removeAllItems();
            combocliente.addItem(act);
            
            }   
        } catch (SQLException ex) {
            Logger.getLogger(VistaRegistroClientes.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,"Ocurrio un error");
        }
        }
        if(parametros.getSelectedIndex()==2){
        
                    parametroBusqueda=d.encrypt(busqueda.getText());
         try {
            String consulta="Select * from cliente where apellido_Pat='"+parametroBusqueda+"' ";
            System.out.println(consulta);
            Statement st2=reg.createStatement();
            ResultSet rs2=st2.executeQuery(consulta);
            while(rs2.next()){
                Cliente act=new Cliente();
                act.setIdCLiente(rs2.getInt(1));
                act.setNombre(d.decrypt(rs2.getString(2)));
                act.setApellPat(d.decrypt(rs2.getString(3)));
                act.setApellMat(d.decrypt(rs2.getString(4)));
                act.setFecha_nac(rs2.getString(5));
                act.setTipo(rs2.getInt(6));
                act.setRfc(d.decrypt(rs2.getString(7)));
                act.setCalle(d.decrypt(rs2.getString(8)));
                act.setNumero(d.decrypt(rs2.getString(9)));
                act.setPaisOrigen(rs2.getInt(10));
                act.setPaisResidencia(rs2.getInt(11));
                act.setEntidad(rs2.getInt(12));
                act.setLocalidad(rs2.getInt(13));
                act.setCodigoPostal(d.decrypt(rs2.getString(14)));
                act.setNumTel(d.decrypt(rs2.getString(15)));
                act.setRiesgo(rs2.getInt(16));
                act.setActividad(rs2.getString(17));
                act.setIngreso(rs2.getDouble(18));
                System.out.println("Si entre al while");
              combocliente.removeAllItems();
            combocliente.addItem(act);
            
            }   
        } catch (SQLException ex) {
            Logger.getLogger(VistaRegistroClientes.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,"Ocurrio un error");
        }
        
        }
        
        if(parametros.getSelectedIndex()==3){
        
                    parametroBusqueda=d.encrypt(busqueda.getText());
         try {
            String consulta="Select * from cliente where RFC='"+parametroBusqueda+"' ";
            System.out.println(consulta);
            Statement st2=reg.createStatement();
            ResultSet rs2=st2.executeQuery(consulta);
            while(rs2.next()){
                Cliente act=new Cliente();
                act.setIdCLiente(rs2.getInt(1));
                act.setNombre(d.decrypt(rs2.getString(2)));
                act.setApellPat(d.decrypt(rs2.getString(3)));
                act.setApellMat(d.decrypt(rs2.getString(4)));
                act.setFecha_nac(rs2.getString(5));
                act.setTipo(rs2.getInt(6));
                act.setRfc(d.decrypt(rs2.getString(7)));
                act.setCalle(d.decrypt(rs2.getString(8)));
                act.setNumero(d.decrypt(rs2.getString(9)));
                act.setPaisOrigen(rs2.getInt(10));
                act.setPaisResidencia(rs2.getInt(11));
                act.setEntidad(rs2.getInt(12));
                act.setLocalidad(rs2.getInt(13));
                act.setCodigoPostal(d.decrypt(rs2.getString(14)));
                act.setNumTel(d.decrypt(rs2.getString(15)));
                act.setRiesgo(rs2.getInt(16));
                act.setActividad(rs2.getString(17));
                act.setIngreso(rs2.getDouble(18));
                System.out.println("Si entre al while");
              combocliente.removeAllItems();
            combocliente.addItem(act);
            
            }   
        } catch (SQLException ex) {
            Logger.getLogger(VistaRegistroClientes.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,"Ocurrio un error");
        }
            
        }
        
        
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
               if(parametros.getSelectedIndex()==0 || busqueda.getText().equals("")){
        JOptionPane.showMessageDialog(null, "Selecciona una opcion de busqueda y proporciona \n un parametro para iniciar");
        }
        else{
        if(parametros2.getSelectedIndex()==1){
            parametroBusqueda=d.encrypt(busquedas2.getText());
         try {
            String consulta="Select * from cliente where nombre='"+parametroBusqueda+"' ";
            System.out.println(consulta);
            Statement st2=reg.createStatement();
            ResultSet rs2=st2.executeQuery(consulta);
            while(rs2.next()){
                Cliente act=new Cliente();
                act.setIdCLiente(rs2.getInt(1));
                act.setNombre(d.decrypt(rs2.getString(2)));
                act.setApellPat(d.decrypt(rs2.getString(3)));
                act.setApellMat(d.decrypt(rs2.getString(4)));
                act.setFecha_nac(rs2.getString(5));
                act.setTipo(rs2.getInt(6));
                act.setRfc(d.decrypt(rs2.getString(7)));
                act.setCalle(d.decrypt(rs2.getString(8)));
                act.setNumero(d.decrypt(rs2.getString(9)));
                act.setPaisOrigen(rs2.getInt(10));
                act.setPaisResidencia(rs2.getInt(11));
                act.setEntidad(rs2.getInt(12));
                act.setLocalidad(rs2.getInt(13));
                act.setCodigoPostal(d.decrypt(rs2.getString(14)));
                act.setNumTel(d.decrypt(rs2.getString(15)));
                act.setRiesgo(rs2.getInt(16));
                act.setActividad(rs2.getString(17));
                act.setIngreso(rs2.getDouble(18));
                System.out.println("Si entre al while");
             ClienteVendedor.removeAllItems();
            ClienteVendedor.addItem(act);
            
            }   
        } catch (SQLException ex) {
            Logger.getLogger(VistaRegistroClientes.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,"Ocurrio un error");
        }
        }
        if(parametros2.getSelectedIndex()==2){
        
                    parametroBusqueda=d.encrypt(busquedas2.getText());
         try {
            String consulta="Select * from cliente where apellido_Pat='"+parametroBusqueda+"' ";
            System.out.println(consulta);
            Statement st2=reg.createStatement();
            ResultSet rs2=st2.executeQuery(consulta);
            while(rs2.next()){
                Cliente act=new Cliente();
                act.setIdCLiente(rs2.getInt(1));
                act.setNombre(d.decrypt(rs2.getString(2)));
                act.setApellPat(d.decrypt(rs2.getString(3)));
                act.setApellMat(d.decrypt(rs2.getString(4)));
                act.setFecha_nac(rs2.getString(5));
                act.setTipo(rs2.getInt(6));
                act.setRfc(d.decrypt(rs2.getString(7)));
                act.setCalle(d.decrypt(rs2.getString(8)));
                act.setNumero(d.decrypt(rs2.getString(9)));
                act.setPaisOrigen(rs2.getInt(10));
                act.setPaisResidencia(rs2.getInt(11));
                act.setEntidad(rs2.getInt(12));
                act.setLocalidad(rs2.getInt(13));
                act.setCodigoPostal(d.decrypt(rs2.getString(14)));
                act.setNumTel(d.decrypt(rs2.getString(15)));
                act.setRiesgo(rs2.getInt(16));
                act.setActividad(rs2.getString(17));
                act.setIngreso(rs2.getDouble(18));
                System.out.println("Si entre al while");
              ClienteVendedor.removeAllItems();
            ClienteVendedor.addItem(act);
            
            }   
        } catch (SQLException ex) {
            Logger.getLogger(VistaRegistroClientes.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,"Ocurrio un error");
        }
        
        }
        
        if(parametros2.getSelectedIndex()==3){
        
                    parametroBusqueda=d.encrypt(busquedas2.getText());
         try {
            String consulta="Select * from cliente where RFC='"+parametroBusqueda+"' ";
            System.out.println(consulta);
            Statement st2=reg.createStatement();
            ResultSet rs2=st2.executeQuery(consulta);
            while(rs2.next()){
                Cliente act=new Cliente();
                act.setIdCLiente(rs2.getInt(1));
                act.setNombre(d.decrypt(rs2.getString(2)));
                act.setApellPat(d.decrypt(rs2.getString(3)));
                act.setApellMat(d.decrypt(rs2.getString(4)));
                act.setFecha_nac(rs2.getString(5));
                act.setTipo(rs2.getInt(6));
                act.setRfc(d.decrypt(rs2.getString(7)));
                act.setCalle(d.decrypt(rs2.getString(8)));
                act.setNumero(d.decrypt(rs2.getString(9)));
                act.setPaisOrigen(rs2.getInt(10));
                act.setPaisResidencia(rs2.getInt(11));
                act.setEntidad(rs2.getInt(12));
                act.setLocalidad(rs2.getInt(13));
                act.setCodigoPostal(d.decrypt(rs2.getString(14)));
                act.setNumTel(d.decrypt(rs2.getString(15)));
                act.setRiesgo(rs2.getInt(16));
                act.setActividad(rs2.getString(17));
                act.setIngreso(rs2.getDouble(18));
                System.out.println("Si entre al while");
              ClienteVendedor.removeAllItems();
            ClienteVendedor.addItem(act);
            
            }   
        } catch (SQLException ex) {
            Logger.getLogger(VistaRegistroClientes.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,"Ocurrio un error");
        }
            
        }
        
        
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    public void cargarClientes() throws SQLException {
     Statement st;
        try {
            st = reg.createStatement();
            ResultSet rs=st.executeQuery("Select * from cliente");
            while(rs.next()){
                Cliente act=new Cliente();
                act.setIdCLiente(rs.getInt(1));
                act.setNombre(d.decrypt(rs.getString(2)));
                act.setApellPat(d.decrypt(rs.getString(3)));
                act.setApellMat(d.decrypt(rs.getString(4)));
                act.setFecha_nac(rs.getString(5));
                act.setTipo(rs.getInt(6));
                act.setRfc(d.decrypt(rs.getString(7)));
                act.setCalle(d.decrypt(rs.getString(8)));
                act.setNumero(d.decrypt(rs.getString(9)));
                act.setPaisOrigen(rs.getInt(10));
                act.setPaisResidencia(rs.getInt(11));
                act.setEntidad(rs.getInt(12));
                act.setLocalidad(rs.getInt(13));
                act.setCodigoPostal(d.decrypt(rs.getString(14)));
                act.setNumTel(d.decrypt(rs.getString(15)));
                act.setRiesgo(rs.getInt(16));
                act.setActividad(rs.getString(17));
                act.setIngreso(rs.getDouble(18));
            combocliente.addItem(act);
            ClienteVendedor.addItem(act);
     }        } catch (SQLException ex) {
            Logger.getLogger(VistaRegistroClientes.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }
    
    public void cargarmoneda(){
        try {
            Statement st;
            
            st = reg.createStatement();
            ResultSet rs=st.executeQuery("Select * from moneda");
            while(rs.next()){
            Moneda m=new Moneda();
            m.setId_moneda(rs.getInt(1));
            m.setClave(rs.getString(2));
            m.setMoneda(rs.getString(3));
            m.setPais_moneda(rs.getString(4));
            combomoneda.addItem(m);
            }
        } catch (SQLException ex) {
            Logger.getLogger(VistaOperaciones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void cargarmonetario(){
            try {
            Statement st;
            
            st = reg.createStatement();
            ResultSet rs=st.executeQuery("Select * from monetario");
            while(rs.next()){
            Monetario mo=new Monetario();
            mo.setId_clavemonetario(rs.getInt(1));
            mo.setClave(rs.getInt(2));
            mo.setInstrumento_monetario(rs.getString(3));
            mo.setDescripcion(rs.getString(4));
            combomonetario.addItem(mo);
            }
        } catch (SQLException ex) {
            Logger.getLogger(VistaOperaciones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void cargartipoOperacion(){
            try {
            Statement st;
            
            st = reg.createStatement();
            ResultSet rs=st.executeQuery("Select * from tipo_operacion");
            while(rs.next()){
            TipoOperacion t=new TipoOperacion();
            t.setId_tipoOp(rs.getInt(1));
            t.setClave(rs.getInt(2));
            t.setTipo_Operacion(rs.getString(3));
            t.setDescripcion(rs.getString(4));
            combooperacion.addItem(t);
            }
        } catch (SQLException ex) {
            Logger.getLogger(VistaOperaciones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaOperaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaOperaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaOperaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaOperaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new VistaOperaciones().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(VistaOperaciones.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CPBien;
    private javax.swing.JComboBox ClienteVendedor;
    private javax.swing.JButton SeleccionaClienteV;
    private javax.swing.JTextField act;
    private javax.swing.JTextField actividadVendedor;
    private javax.swing.JTextField am;
    private javax.swing.JTextField ap;
    private javax.swing.JTextField apellidoMaternoVendedor;
    private javax.swing.JTextField apellidoPaternoVendedor;
    private javax.swing.JTextField busqueda;
    private javax.swing.JTextField busquedas2;
    private javax.swing.JComboBox combocliente;
    private javax.swing.JComboBox combomoneda;
    private javax.swing.JComboBox combomonetario;
    private javax.swing.JComboBox combooperacion;
    private javax.swing.JTextField contrato;
    private javax.swing.JTextField direccionBien;
    private javax.swing.JTextField ing;
    private javax.swing.JTextField ingresoVendedor;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField metrosbien;
    private javax.swing.JTextField nombre;
    private javax.swing.JTextField nombreVendedor;
    private javax.swing.JTextField numeroBien;
    private javax.swing.JTextField operacion;
    private javax.swing.JComboBox parametros;
    private javax.swing.JComboBox parametros2;
    private javax.swing.JTextField recibeAnticipo;
    private javax.swing.JComboBox tipobien;
    // End of variables declaration//GEN-END:variables

    private void listasNegras(String RFCC, int riesgo) throws ClassNotFoundException {
        //To change body of generated methods, choose Tools | Templates.
    try {
           
            
                  if(riesgo == 10){
                      System.out.println("10");
                      asignacionlistas("El cliente se encuentra en listas negras",2);
                  }else if (riesgo == 11){
                      System.out.println("11");
                      asignacionlistas("El cliente se considera PPE",6);
                  }
              
                   } catch (SQLException ex) {
            System.out.println(ex+ "-no existe");
            Logger.getLogger(VistaCalificacionCliente.class.getName()).log(Level.SEVERE, null, ex);
            
        }
    }

    private void asignacionlistas(String string,int alarma) throws ClassNotFoundException, SQLException {
    ConocerDao ac = new ConocerDao();
        
       java.sql.Date sqlDate = new java.sql.Date(Calendar.getInstance().getTimeInMillis());
        
         
            for (int j=0;j<c1;j++){
                try { 
                    ValidaOp(id[j]);
                    if(valid == 0)
                    ac.RegistroDescripcion(id[j], alarma, sqlDate,string,1);
                } catch (SQLException ex) {
                    Logger.getLogger(ConocerC.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            
        }  

    private void operacion(int idCliente) throws SQLException {
    
            String aux="Select * from operaciones where Cliente_id='"+idCliente+"'";
            Statement st;
            st = reg.createStatement();
            ResultSet rs=st.executeQuery(aux);
            c1=0;
              while (rs.next()){
                  System.out.println(rs.getString("id_Operacion"));
                  id[c1] = Integer.parseInt(rs.getString("id_Operacion"));
                  c1++;
              }   

    
    }
    public void ValidaOp(int op) {
    ResultSet res;
    PreparedStatement pstm;
        try{
            pstm = reg.prepareStatement("SELECT * FROM intermedia_operacion_alarma WHERE Operacion_id = '" + op+ "'");
            res = pstm.executeQuery();
            if(res.next()){
                valid= 1;
                 
} else
            valid = 0;
            res.close();
        } catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
 
    }
}
